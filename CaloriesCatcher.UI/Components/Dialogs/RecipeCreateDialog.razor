@using CaloriesCatcher.UI.Model
@using CaloriesCatcher.UI.Service
@using CaloriesCatcher.UI.Service.IService
<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="recipeDto.RecipeName" T="string" Label="Recipe Name"></MudTextField>
        <MudTextField @bind-Value="recipeDto.Calories" T="double" Label="Calories"></MudTextField>
        <MudTextField @bind-Value="recipeDto.ImagePath" T="string" Label="Image Path"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CreateRecipe">Create Recipe</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [Inject] IDialogService dialogService { get; set; } = default!;
    [Inject] private IRecipe recipeService { get; set; } = default!;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [CascadingParameter] Task<AuthenticationState> authenticationState { get; set; } = default!;
    [Inject] private NavigationManager navigationManager { get; set; } = default!;
    RecipeDto recipeDto = new RecipeDto();

    private async void CreateRecipe()
    {
        var authState = await authenticationState;
        recipeDto.UserId = authState.User.FindFirst("sub")?.Value;

        var response = await recipeService.CreateRecipeAsync(recipeDto);
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
        MudDialog.Close(DialogResult.Ok(true));
        navigationManager.NavigateTo("/createrecipe", true);
        StateHasChanged();
    }
}