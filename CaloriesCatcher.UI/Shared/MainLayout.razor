@using CaloriesCatcher.UI.Service.IService
@inherits LayoutComponentBase
<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<PageTitle>Calories Catcher</PageTitle>
<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
                <MudSpacer/>
                <MudIconButton Icon="@Icons.Material.Filled.Brightness3" Color="Color.Inherit" Edge="Edge.End" OnClick="@ToggleTheme"/>
                <MudText Style="padding-left: 20px;">@user</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h5" Class="mt-1">Calories</MudText>
                </MudDrawerHeader>
                <NavMenu></NavMenu>
            </MudDrawer>
            <MudMainContent>
                @Body
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <!-- AppBar for Not Authorized Users -->
        <MudAppBar Elevation="1">
            <div style=" margin: auto; display: flex; align-items: center;">
                <MudText Typo="Typo.h6" Style="flex-shrink: 0;">Calories Tracker</MudText>
                <div style="flex-grow: 1;"></div>
                <div style="display: flex; align-items: center; flex-wrap: nowrap;">
                    <MudNavLink Href="/landing" Match="NavLinkMatch.Prefix">Home</MudNavLink>
                    <MudNavLink Href="/about" Match="NavLinkMatch.Prefix">About Us</MudNavLink>
                    <div style="width: 40px;"></div>
                    <MudNavLink Href="/login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
                    <MudNavLink Href="/register" Match="NavLinkMatch.Prefix">Register</MudNavLink>
                                    <MudIconButton Icon="@Icons.Material.Filled.Brightness6" Color="Color.Inherit" Edge="Edge.End" OnClick="@ToggleTheme"/>
                </div>
            </div>
        </MudAppBar>
        <MudMainContent>
            @Body
        </MudMainContent>
    </NotAuthorized>
</AuthorizeView>

@code {

    [CascadingParameter] Task<AuthenticationState> authenticationState { get; set; } = default!;

    [Inject]
    IJsInteropService JsInteropService { get; set; } = default!;

    public string style { get; set; }
    bool _drawerOpen = true;
    bool _isDarkMode = false; // By default, set to light mode
    string user = string.Empty;
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await authenticationState;
            user = $"Welcome {authState.User.Identity.Name}";
            string isCookieSet =  await JsInteropService.GetCookieAsync("_darkMode");
            if(!(string.IsNullOrEmpty(isCookieSet)))
            {
                _isDarkMode = bool.Parse(isCookieSet);
            }
            else
            {
                _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            }
            StateHasChanged();
        }
    }

    MudBlazor.MudTheme _lightTheme = new MudBlazor.MudTheme
    {
        Palette = new MudBlazor.Palette
        {
            Black = "#ffffff",
            Background = "#f5f5f5",
            AppbarBackground = "#483659",
            DrawerBackground = "#483659",
            DrawerText = "#ffffff",
            DrawerIcon = "#ffffff"
        }
    };

    MudBlazor.MudTheme _darkTheme = new MudBlazor.MudTheme
    {
        Palette = new MudBlazor.Palette
        {
            Black = "#ffffff",
            Background = "#1a1a24",  // Made this slightly darker
            AppbarBackground = "#7e6fff",
            DrawerBackground = "#1a1a24", // Made this slightly darker
            DrawerText = "#f5f5f5",  // Made this whiter (instead of pure white to retain a bit of contrast)
            DrawerIcon = "#ffffff"
        }
    };


    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        JsInteropService.SetCookieAsync("_darkMode", _isDarkMode.ToString(), 365);
    }

}