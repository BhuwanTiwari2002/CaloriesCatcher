@page "/"
@using CaloriesCatcher.UI.Components;
@using CaloriesCatcher.UI.Service.IService;
<div style="float:left; width:40%; margin: 20px;">
    <MudText>Welcome</MudText>
    <MudPaper Class="pa-4">
        <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="i" InputLabels="@labels" Width="35%" Height="35%" />
    </MudPaper>
    <MudPaper Class="pa-4 mt-2 d-flex justify-center">
        <MudButton OnClick="AddDataSize" Variant="Variant.Filled" Color="Color.Primary">Add Food</MudButton>
        <MudButton @onclick="EditData" Variant="Variant.Filled" Class="mx-4">Edit Food</MudButton>
        <MudButton OnClick="RemoveDataSize" Variant="Variant.Filled" Color="Color.Secondary">Delete Food</MudButton>
    </MudPaper>
    <div style="text-align:center; margin-top:2%;">
        <MudButton Color="Color.Primary" Variant="Variant.Text">Track a food</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Text">Track a recipe</MudButton>
    </div>
</div>
<div style="float:right; width:40%;margin-top:3%; margin-right:3%; margin-bottom:5%;">
    <MudItem xs="12" md="6">
        <MudText Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Today's Progress</MudText>
        <MudPaper Width="100%">
            <MudList>
                <MudListItem Text="Apple" />
                <MudListItem Text="Qdoba Bowl" />
                <MudListItem Text="Water" />
                <MudListItem Text="Pepsi" />
                <MudListItem Text="Snack Bar" />
                <MudListItem Text="Orange" />
                <MudListItem Text="@Item" />
            </MudList>
        </MudPaper>
    </MudItem>
</div>

@code {
    [Inject]
    private ICalories caloriesService { get; set; } = default!;
    [Inject]
    private ISnackbar snackBar { get; set; } = default!;
    public string Item { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await caloriesService.GetAllCouponAsync();
        if (response != null && response.IsSuccess)
        {
            Item = response.Result.ToString();
        }
        else
        {
            snackBar.Add("Something went wrong", Severity.Error);
        }
        
    }
    int i = -1;
    int dataSize = 4;
    double[] data = { 77, 25, 20, 5 };
    string[] labels = { "Breakfast", "Lunch", "Dinner", "snacks" };
    // change to edit
    void EditData()
    {
        /* var new_data = new double[dataSize];
        for (int i = 0; i < new_data.Length; i++)
        new_data[i] = random.NextDouble() * 100;
        data = new_data;
        StateHasChanged(); */
    }

    void AddDataSize()
    {
        if (dataSize < 20)
        {
            dataSize = dataSize + 1;

        }
    }
    void RemoveDataSize()
    {
        if (dataSize > 0)
        {
            dataSize = dataSize - 1;

        }
    }
    }