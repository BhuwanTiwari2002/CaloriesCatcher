<AuthorizeView Roles="ADMIN, BASIC">
    <Authorized>
        @page "/"
        @using CaloriesCatcher.UI.Components;
        @using CaloriesCatcher.UI.Model;
        @using CaloriesCatcher.UI.Service.IService;
        @using Newtonsoft.Json;
        <div class="ms-5 mt-5 mb-lg-5">
            <MudText Typo="Typo.h5">Welcome: @UserName</MudText>
            <MudText Class="opacity-75" Typo="Typo.h6">Id: @UserId</MudText>
            <MudGrid Spacing="1" Justify="Justify.FlexStart">
                <MudItem>
                    <MudPaper Height="300px" Width="300px">
                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Daily Progress</MudText>
                        <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="i" InputLabels="@labels"/>
                    </MudPaper>
                </MudItem>
                <MudItem>
                    <MudPaper Height="300px" Width="300px">
                        <MudText Align="Align.Center" Color="Color.Secondary" Typo="Typo.h6" GutterBottom="true">Target Goal</MudText>
                        <MudChart ChartType="ChartType.Donut" InputData="@daygoal" InputLabels="@daycalorie">
                            <CustomGraphics>
                                <text class="donut-inner-text" x="47%" y="35%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2" color="white">Today</text>
                                <text class="donut-inner-text" x="47%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5" color="white">@data.Sum().ToString()</text>
                            </CustomGraphics>
                        </MudChart>
                    </MudPaper>
                </MudItem>
                <MudItem Class="mb-lg-5">
                    <MudPaper Height="300px" Width="300px">
                        <MudText Align="Align.Center" Color="Color.Success" Typo="Typo.h6" GutterBottom="true">Weekly Calorie Intake</MudText>
                        <MudChart ChartType="ChartType.Donut" InputData="@week" @bind-SelectedIndex="i" InputLabels="@weekday"></MudChart>
                    </MudPaper>
                </MudItem>
            </MudGrid>
                    <div style="display: block" class="mt-lg-5">
                         <MudButton OnClick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">Log Calories</MudButton>
                    </div>
        </div>

        
        <MudText Style="margin-top: 500px;">User Id: @UserId</MudText>
            <div class="container" style="display: flex; flex-wrap: wrap; align-content:flex-start; gap: 1%; margin-left: 0 ">
                <div style="Width:35%; Height:35%">
                <MudPaper Elevation=" 3">
                    <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="i" InputLabels="@labels"  />
                </MudPaper>
                </div>
                <div style="Width:35%; Height:35%">
                <MudPaper Elevation=" 3">
                    <MudChart ChartType="ChartType.Donut" InputData="@daygoal" InputLabels="@daycalorie">
                        <CustomGraphics>
                            <text class="donut-inner-text" x="47%" y="35%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">Total</text>
                            <text class="donut-inner-text" x="47%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@data.Sum().ToString()</text>
                        </CustomGraphics>
                    </MudChart>
                </MudPaper>
                </div>
            @* 
                <MudPaper  Elevation=" 3">
                    <div style="Width:35%; Height:35%; flex-direction:column;">
                    <MudButton OnClick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">Log Calories</MudButton>
                    <MudButton @onclick="EditData" Variant="Variant.Filled" Class="mx-4">Edit Food</MudButton>
                    <MudButton OnClick="RemoveDataSize" Variant="Variant.Filled" Color="Color.Secondary">Delete Food</MudButton>
                    </div>
                </MudPaper> *@
            <MudPaper Elevation=" 3">
                @* <div style=" flex-direction:column;"> *@
                @*     <MudButton Style="width=350px, height=350px" OnClick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">Log Calories</MudButton> *@
                @*     <MudButton Style="width=350px, height=350px" @onclick="EditData" Variant="Variant.Filled" Class="mx-4">Edit Food</MudButton> *@
                @*     <MudButton Style="width=350px, height=350px" OnClick="RemoveDataSize" Variant="Variant.Filled" Color="Color.Secondary">Delete Food</MudButton> *@
                @* </div> *@
            </MudPaper>
            <MudPaper Elevation=" 3">


               
            </MudPaper>
                
            </div>
        <MudButton OnClick="RemoveDataSize" Variant="Variant.Filled" Color="Color.Secondary">Delete Food</MudButton>
                <MudButton Color="Color.Primary" Variant="Variant.Text">Track a recipe</MudButton>
            <MudItem xs="6" sm="3" Class="ml-16 ">
                <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Details</MudText>
                <MudPaper Width="100%" Elevation=" 3">
                    <MudTable Items="caloriesDtos" Class="calories-table">
                        <HeaderContent>
                            <MudTh>Calorie Name</MudTh>
                            <MudTh>Calorie Value</MudTh>
                        </HeaderContent>
                        <RowTemplate Context="items">
                            <MudTd>@items.CalorieName</MudTd>
                            <MudTd>@items.Calorie</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
        </MudItem>
        <MudGrid Class="mt-5 px-5">
            <MudPaper Class="d-flex align-center justify-center mx-auto" Elevation=" 3" Width="100%">
               
                <MudItem xs="12" sm="4" Class="mt-16 mx-6">
                    <div style="background-color: #78909C; color: #FAFAFA; border-radius: 20px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);" class="d-flex flex-column align-center justify-center py-8">
                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Weekly Calorie Intake</MudText>
                        <MudChart ChartType="ChartType.Pie" InputData="@week" @bind-SelectedIndex="i" InputLabels="@weekday" Width="100%" Height="400px"  />
                    </div>
                </MudItem>
                <MudItem xs="12" sm="4" Class="mt-16 mx-6">
                    <div style="background-color: #78909C; color: #FAFAFA; border-radius: 20px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);" class="d-flex flex-column align-center justify-center py-8">
                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Monthly Progress</MudText>
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="400px"></MudChart>
                    </div>
                </MudItem>
                <MudItem xs="12" sm="4" Class="mt-16 mx-6">
                    <div style="background-color: #78909C; color: #FAFAFA; border-radius: 20px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);" class="d-flex flex-column align-center justify-center py-8">
                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" GutterBottom="true">Weight Progress</MudText>
                        <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="400px"></MudChart>
                    </div>
                </MudItem>

            </MudPaper>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <NotAuthorzied/>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Inject]
    private ICalories caloriesService { get; set; } = default!;

    [Inject]
    private ISnackbar snackBar { get; set; } = default!;

    [Inject]
    IDialogService dialogService { get; set; } = default!;

    [CascadingParameter]
    Task<AuthenticationState> authenticationState { get; set; } = default!;

    public string UserId { get; set; }
    public string UserName { get; set; }

    List<CaloriesDto> caloriesDtos = new List<CaloriesDto>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshCaloriesData();
    }

    int i = -1;
    int dataSize = 4;
    double[] data = { 77, 25, 20, 5 };
    string[] labels = { "Breakfast", "Lunch", "Dinner", "snacks" };
    // change to edit
    void EditData()
    {
    /* var new_data = new double[dataSize];
        for (int i = 0; i < new_data.Length; i++)
        new_data[i] = random.NextDouble() * 100;
        data = new_data;
        StateHasChanged(); */
    }

    void AddDataSize()
    {
        if (dataSize < 20)
        {
            dataSize = dataSize + 1;
        }
    }

    void RemoveDataSize()
    {
        if (dataSize > 0)
        {
            dataSize = dataSize - 1;
        }
    }

    double totalCalories = 0;
    int weekSize = 7;
    double[] week = { 10,10,10,10,10,25,25 };
    string[] weekday = { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
    
    
    async Task RefreshCaloriesData()
    {
        var authState = await authenticationState;
        var response = await caloriesService.GetCaloriesByUserAsync(authState.User.FindFirst("Sub")?.Value);
        UserId = authState.User.FindFirst("sub")?.Value;
        UserName = authState.User.FindFirst("Name")?.Value;
        if (response != null && response.IsSuccess)
        {
            caloriesDtos = JsonConvert.DeserializeObject<List<CaloriesDto>>(Convert.ToString(response.Result));
            totalCalories = caloriesDtos.Sum(c => c.Calorie);
            StateHasChanged();
        }
        else
        {
            snackBar.Add("Something went wrong", Severity.Error);
        }
    }

    async void OpenDialog()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
        var dialog = dialogService.Show<CaloriesLog>("Calories Log", closeOnEscapeKey);
        var result = await dialog.Result;
    }

    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Weight", Data = new double[] { 90, 79, 72, 69, 62, 62, 55, 65, 70 } }
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };


        public double[] daygoal = { 25, 75};
        public string[] daycalorie = { "Goal", "Current Intake"};

   
}