@page "/profile"
@using CaloriesCatcher.UI.Model;
@using CaloriesCatcher.UI.Service
@using CaloriesCatcher.UI.Service.IService
@using KitchenComfort.Web.Models;
@using Newtonsoft.Json;

<div class="mud-container">
    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                <MudText Typo="Typo.h3">User Settings</MudText>
            </MudPaper>
        </MudItem>

        <MudPaper Class="d-flex align-center justify-center mx-auto" Elevation=" 3" Width="35%">
            <MudItem>
                <MudList>
                    <MudIcon Style="float:right" Class="mt-4 d-flex align-content-end" Icon="@Icons.Material.Filled.Edit" Title="Edit" @onclick="EditData" />
                    <MudListItem><MudTextField @bind-Value="Height" Label="Height" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                    <MudListItem><MudTextField @bind-Value="Gender" Label="Weight" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                    <MudListItem><MudTextField @bind-Value="DailyCalories" Label="DailyGoal" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                    <MudListItem><MudTextField @bind-Value="Weight" Label="Age" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                    <MudListItem><MudTextField @bind-Value="BirthDay" Label="Gender" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                </MudList>
            </MudItem>

        </MudPaper>
    </MudGrid>
 </div>

@code {
    [Inject] private ISnackbar snackBar { get; set; } = default!;
    [Inject] IUserDetailService userDetailService { get; set; } = default!;
    [CascadingParameter] Task<AuthenticationState> authenticationState { get; set; } = default!;
    public UserDetail userDetail { get; set; } = new UserDetail();

    protected override async Task OnInitializedAsync()
    {
        await GetUserDetailData();
    }
    async Task GetUserDetailData()
    {
        var authState = await authenticationState;
        var response = await userDetailService.GetByUser(authState.User.FindFirst("Sub")?.Value);

        if (response != null && response.IsSuccess)
        {
            userDetail = JsonConvert.DeserializeObject<UserDetail>(Convert.ToString(response.Result));

        }
    }
    private async Task OnEditUserDetail(EditContext context)
    {
        
    }

    public string UserId { get; set; } = string.Empty;
    public int Height { get; set; }
    public int Weight { get; set; }
    public Decimal DailyCalories { get; set; }
    public DateTime BirthDay { get; set; }
    public string Gender { get; set; } = string.Empty;

    void EditData()
    {
        snackBar.Add("Edit Btn Working");
    }

}