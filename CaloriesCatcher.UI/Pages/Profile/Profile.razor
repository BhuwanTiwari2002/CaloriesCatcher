@page "/profile"
@using CaloriesCatcher.UI.Service
@using CaloriesCatcher.UI.Service.IService
@using KitchenComfort.Web.Models;

<div class="mud-container">
    <MudPaper Elevation="1" Square="false" Class="pa-4 mt-5" Style="max-width: 450px; margin: auto;">
        <div class="text-center">
            <MudText Typo="Typo.h3" Color="Color.Primary">Your Profile</MudText>
        </div>
        <EditForm Model="userDto">
            <MudText>Height: @Height </MudText>
            <MudText>Weight: @Weight </MudText>
            <MudText>Daily Calories: @DailyCalories </MudText>
            <MudText>Age: @Age </MudText>
            <MudText>Gender: @Gender </MudText>

            <MudText>UserName: @UserId </MudText>
             @* Add Reset Password Buttn Here *@
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" aria-label="Edit"></MudIconButton>
         </EditForm>
     </MudPaper>
 </div>

@code {
        [Inject] private IAuthService authService { get; set; } = default!;
        [Inject] private ISnackbar snackBar { get; set; } = default!;
        UserDto userDto = new UserDto();
    [Inject] IUserDetailService userDetailService { get; set; } = default!;

    [CascadingParameter]
    Task<AuthenticationState> authenticationState { get; set; } = default!;
    public string UserId { get; set; } = string.Empty;
    public double Height { get; set; }
    public double Weight { get; set; }
    public int DailyCalories { get; set; }
    public int Age { get; set; }
    public string Gender { get; set; } = string.Empty;

    void EditData()
    {
        snackBar.Add("Edit Btn Working");
    }

    protected override async Task OnInitializedAsync()
    {

        await GetUserDetailData();

    }

    async Task GetUserDetailData()
    {
        var authState = await authenticationState;

        var response = await userDetailService.GetByUser(authState.User.FindFirst("Sub")?.Value);
        if (response.IsSuccess)
        {
            var t = response;
            // var test = JsonConvert.DeserializeObject<UserDetail>(Convert.ToString(response.Result));
            StateHasChanged();
        }
    }
}