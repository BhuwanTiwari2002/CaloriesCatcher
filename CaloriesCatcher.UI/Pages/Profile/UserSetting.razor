@page "/usersetting"
@using KitchenComfort.Web.Models;
@using CaloriesCatcher.UI.Components;
@using CaloriesCatcher.UI.Model;
@using CaloriesCatcher.UI.Service.IService;
@using Newtonsoft.Json;
<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudText Typo="Typo.h3">User Settings</MudText>
        </MudPaper>
    </MudItem>
   
    <MudPaper Class="d-flex align-center justify-center mx-auto" Elevation=" 3" Width="35%">
        <MudItem>
            <MudList>
                <MudIcon Style="float:right" Class="mt-4 d-flex align-content-end" Icon="@Icons.Material.Filled.Edit" Title="Edit" @onclick="EditData" />
                <MudListItem><MudTextField @bind-Value="UserDetail.Height" Label="Height" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                <MudListItem><MudTextField @bind-Value="UserDetail.Gender" Label="Weight" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                <MudListItem><MudTextField @bind-Value="UserDetail.DailyCalories" Label="DailyGoal" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                <MudListItem><MudTextField @bind-Value="UserDetail.Weight" Label="Age" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
                <MudListItem><MudTextField @bind-Value="UserDetail.BirthDate" Label="Gender" ReadOnly="true" Variant="Variant.Text" /></MudListItem>
            </MudList>
        </MudItem>
       
    </MudPaper>
</MudGrid>
<CaloriesCatcher.UI.Components.CalorieFooter />
@code {
    [Inject] private IAuthService authService { get; set; } = default!;
    [Inject] private ISnackbar snackBar { get; set; } = default!;
    [Inject] IUserDetailService userDetailService { get; set; } = default!;
    [CascadingParameter]
    Task<AuthenticationState> authenticationState { get; set; } = default!;
    public UserDetail UserDetail { get; set; } = default!;
    bool isLoading = true;

    

    public string UserId { get; set; } = string.Empty;
    public int Height { get; set; }
    public int Weight { get; set; }
    public Decimal DailyCalories { get; set; }
    public DateTime BirthDay { get; set; }
    public string Gender { get; set; } = string.Empty;

    void EditData()
    {
        snackBar.Add("Edit Btn Working");
    }

    protected override async Task OnInitializedAsync()
    {
        await GetUserDetailData(); 
        isLoading = false;
    }

    async Task GetUserDetailData()
    {
        var authState = await authenticationState;
        var response = await userDetailService.GetByUser(authState.User.FindFirst("Sub")?.Value);

        if (response != null && response.IsSuccess)
        {
            UserDetail = JsonConvert.DeserializeObject<UserDetail>(Convert.ToString(response.Result));
            
        }
    }
}
