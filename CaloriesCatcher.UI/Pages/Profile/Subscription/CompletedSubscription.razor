@page "/payment-success"
@using Microsoft.AspNetCore.WebUtilities
@using CaloriesCatcher.UI.Service
@using CaloriesCatcher.UI.Service.IService
@using KitchenComfort.Web.Models

<MudContainer>
    <MudCard Elevation="3" Outlined="true" Class="mx-auto my-5" Style="max-width: 600px;">
        <MudCardContent>
            <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Payment Successful!</MudText>
            <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-4">
                Your subscription has been updated successfully. For the changes to take effect,
                please log out and log back in.
            </MudText>
            <MudButton Link="/logout" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Medium" Class="mx-auto d-block">Logout</MudButton>
        </MudCardContent>
    </MudCard>
</MudContainer>
@code {
    [Inject] NavigationManager _navigationManager { get; set; }
    [Inject] StripePaymentsService stripeService { get; set; }
    [Inject] public IAuthService _authService { get; set; }
    [CascadingParameter] Task<AuthenticationState> authenticationState { get; set; } = default!;
    protected async override void OnInitialized()
    {
        string url = _navigationManager.Uri;
        var query = new Uri(url).Query;
        var parsedQuery = QueryHelpers.ParseQuery(query);
        if (parsedQuery.TryGetValue("sessionId", out var sessionId))
        {
            
            
        }
        if (!string.IsNullOrEmpty(url))
        {
            int charAt = sessionId.ToString().IndexOf("$");
            string priceId = sessionId.ToString().Substring(charAt, sessionId.Count);
            var authState = await authenticationState;
            if (priceId == "price_1O3kU6CvoZQgmYDTz2m2Q4Sx")
            {
                _authService.AssignRoleAsync(new RegisterationRequestDto()
                {
                    Email = authState.User.FindFirst("Email")?.Value,
                    RoleName = "Elephant"
                });
                        
            }
            else
            {
                _authService.AssignRoleAsync(new RegisterationRequestDto()
                {
                    Email = authState.User.FindFirst("Email")?.Value,
                    RoleName = "Parrot",
                    Password = "",
                    PhoneNumber = "",
                    UserName = ""
                }); 
            }  
        }   
    }
}